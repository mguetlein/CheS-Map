# general: libraries ###################################

lib.openbabel = Open Babel: The Open Source Chemistry Toolbox (http://openbabel.org)
lib.cdk = The Chemistry Development Kit (CDK) (Version {0}, see http://cdk.sourceforge.net)
lib.r = The R Project for Statistical Computing (http://www.r-project.org)
lib.weka = WEKA : Data Mining Software in Java (Version {0}, see http://www.cs.waikato.ac.nz/ml/weka)
lib.fminer = fminer : description yet to come

# wizard : general ###################################

error.no-features = Clustering and embedding require compound features. You have no features selected.\n\
Please select features in step 3., or disable clustering and embedding.

# wizard : dataset ###################################

dataset.title = Load Dataset
dataset.desc = Select a dataset from your file system for clustering, embedding and visualization.

# wizard: build 3d ###################################

build3d.title = Create 3D Structures
build3d.desc = Compute 3D coordinates for all compounds in the dataset.
build3d.info.cached = 3D structures already built with {0} (result was cached, no time consuming re-computation needed)
build3d.warn.already-3d = 3D already available in dataset ´{0}´ (at least one z-coordinate is set), this will override the original 3D structure
build3d.warn.3d-missing = 3D is NOT available in dataset ´{0}´ (all z-coordinates are 0). 2D flat structures are later shown in the viewer.
build3d.slow = Building 3D structures might take a while (up to a minute per compound). \
The result will be stored, so this computation is only performed once.

# build 3d methods

build3d.no-3d = No 3D Structure Generation (use original structures)
build3d.no-3d.desc = Does NOT create 3D structures (leaves the dataset as it is).

build3d.cdk = CDK 3D Structure Generation
build3d.cdk.desc = Uses {0}\n\
The ModelBuilder3D supports 2 different forcefields.\n\
<b>Warning: </b>This model builder is much faster than the OpenBabel builder, but it tends to produce unreliable results.\n\n\
CDK API: http://pele.farmbio.uu.se/nightly/api/org/openscience/cdk/modeling/builder3d/ModelBuilder3D.html

build3d.openbabel = OpenBabel 3D Structure Generation
build3d.openbabel.desc = Uses {0}\n\
The 'gen3d' option is used to compute 3D coordinates.\n\
(More info: http://openbabel.org/wiki/Tutorial:Basic_Usage)

# wizard : features ###################################

features.title = Extract Features
features.desc = Features may already be included in the dataset, or they can be created with various algorithms. The selected features are used for the clustering and/or 3D embedding.
features.desc.long = The available features are shown in the left panel. Select a (or a group of) feature(s) and click ´{0}´. \
The selected features - shown in the right panel - will be used for clustering and/or embedding.\n\n\
The clustering/embedding result relies on the selected features. For example, select structural features (e.g. OpenBabel Fingerprint FP2) \
to cluster structural similar compounds together and to place structural similar compounds close together in 3D space.\n\n\
Consider carefully how many/which feature/s to chose. Select only a handful of features to increase the influence of each \
single feature on the clustering and embedding. Selecting a larger number of features will effect the clustering and embedding result \
to represent 'overall' similarity.
features.slow = Feature computation may take some time for some of the selected features. \
The computed feature values are cached, so you have to compute them only once for each dataset.

features.integrated = Included in the Dataset
features.integrated.desc = Features that are already included in the provided dataset.\n\
Not all features may be suitable for clustering and/or embedding (like for example SMILES strings, or info text).

features.cdk = CDK Descriptors
features.cdk.desc = Uses {0}\n\
This integrated library can compute a wide range of numeric chemical descriptors (like LogP or Weight).

features.ob = OpenBabel Descriptors
features.ob.desc = Uses {0}\n\
OpenBabel can compute several simple compound descriptors. Documentation can be found here: http://openbabel.org/wiki/--filter_option

features.struct = Structural Fragments
features.struct.desc = Structural fragments are compound subgraphs that are defined via smarts strings. \
Each fragment is used as a binary nominal feature (possible feature values: 'match'/'no-match').\n\
Copy a smarts.csv into the following folder to integrate any structural fragments: {0}\n\
Each line in the csv-file should have 2 values, name of the smarts string and the smarts string itself. \
(Optionally, a third value indicates the minimum number of matches, i.e. you can configure how often a smarts fragment should at least occur in each compound.) \
Comments (starting with '#') will be printed as description. Example csv file:\n\
"Benzene","c1ccccc1"\n\
"Carbonyl with Carbon","[CX3](=[OX1])C"
features.struct.fp2 = OpenBabel Linear Fragments (FP2)
features.struct.fp2.desc = FP2 - Indexes linear fragments up to 7 atoms.
features.struct.fp3 = OpenBabel FP3
features.struct.fp3.desc = FP3 - SMARTS patterns specified in the file patterns.txt
features.struct.fp4 = OpenBabel FP4
features.struct.fp4.desc = FP4 - SMARTS patterns specified in the file SMARTS_InteLigand.txt
features.struct.maccs = OpenBabel MACCS
features.struct.maccs.desc = MACCS - SMARTS patterns specified in the file MACCS.txt
features.struct.cdk.desc = Uses {0}\n\
Matches a predefined set of {1} SMARTS patterns (see API link below).\n\
API: {2}

# wizard : cluster dataset ###################################

cluster.title = Cluster Dataset
cluster.desc = Divides a dataset into clusters (i.e. into subsets of compounds)
cluster.info.fixed-k = This cluster algorithm returns a fixed number of clusters (set property ´{0}´).
cluster.warning.not-clustered-compounds = {1} compounds were not assigned to any cluster by the cluster algorithm, they \
have been combined to \"{0}\".
cluster.warning.not-clustered-compounds.desc = Some cluster algorithms do not assign a cluster to each compound.\n\
You can easily withdraw the cluster with the not-clustered compounds from the view by using the remove function (right-click > Remove)
cluster.warning.disjoint = Beta warning: You are using a non-disjoint cluster algorithm
cluster.warning.disjoint.desc = You are using a non-disjoint cluster algorithm, i.e. each compound can be assigned to \
more than one cluster.\n\
CheS-Mapper was designed for disjoint cluster algorithms, we apologize if any errors may occur.
									
# cluster methods

cluster.no-cluster = No Dataset Clustering
cluster.no-cluster.desc = No clustering is performed. This will embed all structures directly into 3D space without separating them into clusters. \
This is a valid option especially for smaller datasets (but can be used for any dataset size).

cluster.weka.cobweb.desc = Performs hierarchical conceptual clustering.\
It computes CU (category utility) of nodes in the hierarchical tree, in order to merge/split/insert nodes. Parameters:\n\
<b>acuity</b>: CU is computed based on the features standard deviations. Acuity defines a minimum value for the standard deviation. \
The lower acuity is, the more clusters will be created. (Only relevant for numeric features.)\n\
<b>cutoff</b>: The minimum-threshold for CU to merge/split/insert nodes. The lower the cutoff is, the more clusters will be created

cluster.weka.em = Expectation Maximization
cluster.weka.em.desc = EM (Expectation Maximization) clustering models the data as mixture of Gaussians. \
Each cluster is represented by one Gaussian distribution.

cluster.weka.hierarchical = Hierarchical
cluster.weka.hierarchical.desc = Starts with each compound as a single cluster. Subsequently merges the two most similar clusters.\n\
Similarity is computed according to the parameter <b>linkType</b> (see for possible types below).

cluster.weka.kmeans.desc = Assigns compounds to k randomly initialized centroids. \
Iteratively updates centroid positions and re-assignes compounds until the algorithm converges.\n\
<b>Limitation:</b> This method performs only one random initialisation. \
The cluster algorithm <i>{0}</i> should be preferred.

cluster.weka.farthest.desc = <i>k</i>-Means method with particular centroid initialization: It \
starts with a random data point (compound), and chooses the point furthest from it. Subsequently, the point that \
is furthest away from the already chosen points is selected until <i>k</i>points are obtained.\n\
<b>Limitation:</b> This method performs only one random initialization. \
The cluster algorithm <i>{0}</i> should be preferred.

cluster.weka.cascade = k-Means - Cascade
cluster.weka.cascade.desc = Runs simple <i>k</i>-Means algorithm for different sizes of <i>k</i>. The parameter <b>restarts</b> defines how \
many times k-Means is applied with different random intialization. Selects the best clustering result \
according to the Calinski-Harabasz criterion (see Calinski, T. and J. Harabasz. 1974. A dendrite method for cluster analysis. Commun. Stat. 3: 1-27.)

cluster.r.cascade-kmeans = k-Means - Cascade (R)
cluster.r.cascade-kmeans.desc = Uses {0}\n\
Runs <i>k</i>-Means algorithm for different sizes of <i>k</i>. Selects the best clustering result according to one of two available criteria.\n\
Details: http://cc.oulu.fi/~jarioksa/softhelp/vegan/html/cascadeKM.html

cluster.r.dynamic-hierarchical = Hierarchical - Dynamic Tree Cut (R)
cluster.r.dynamic-hierarchical.desc = Uses {0}\n\
Automatically detects clusters in the dendrogram produced by hierarchical clustering.\n\
Details: http://www.genetics.ucla.edu/labs/horvath/CoexpressionNetwork/BranchCutting \n\
The <i>hybrid</i> method is used that takes the distance matrix and the dendrogram into account. The distance matrix is computed with the selected \
distance or similarity measure.

cluster.r.hierarchical = Hierarchical (R)
cluster.r.hierarchical.desc = Uses {0}\n\
Starts with each compound as a single cluster. Subsequently merges the two most similar clusters.\n\
Similarity is computed according to the parameter <b>method</b>: \"Ward's minimum variance method aims at finding compact, \
spherical clusters. The complete linkage method finds similar clusters. The single linkage method (which is closely \
related to the minimal spanning tree) adopts a `friends of friends' clustering strategy. The other methods can be \
regarded as aiming for clusters with characteristics somewhere between the single and complete link methods.\"\n\
Details: http://svitsrv25.epfl.ch/R-doc/library/GLAD/html/hclust.html

cluster.r.kmeans = k-Means (R)
cluster.r.kmeans.desc = Uses {0}\n\
Assigns compounds to <i>k</i> randomly initialized centroids. \
Iteratively updates centroid positions and re-assigns compounds until the algorithm converges.\n\
Implementation details: http://stat.ethz.ch/R-manual/R-patched/library/stats/html/kmeans.html

cluster.r.mahalanobisFixedPoint = Mahlanobis Fixed Point (R)
cluster.r.mahalanobisFixedPoint.desc = description yet to come

cluster.manual = Manual Cluster Assignment
cluster.manual.desc = This is for expert users to do manual (precomputed) cluster assignment, <b>all previously selected features are ignored!</b>\n\n\
Instead, the cluster feature has to be included in the dataset and can be selected below. \
It does not matter if it is selected in the previous step or not. \n\n\
The feature value is the index of the cluster (i.e. it has to be numeric). \
Comma-separated values are allowed to assign a compound to multiple clusters.
cluster.manual.noIntegratedProperties = The dataset has no integrated features that could be used for clustering.
	
# wizard : embedding ###################################

embed.title = Embed into 3D Space
embed.desc = Arranges the compounds and clusters in 3D space. The distance between clusters/compounds reflects their similarity according to the previously selected features.
embed.info.only-nominal = Only nominal features selected. \
Sometimes, this will result in a large number of compounds with equal feature values \
that cannot be distinguished while embedding.
embed.info.quality = The embedding quality measures how good the 3d-positions reflect the features values.\n\
It only depends on the feature values and the 3D embedding algorithm (i.e. not on clustering).\n\
In more detail: it determines the correlation coefficients (CCC and r^2) between the Euclidean distance matrix based on the compound 3d positions, \
and the distance matrix based on compound feature values \
(using the same distance function that is used for the embedding method, Euclidean for PCA). \
The better the embedding, the closer the correlation coefficients to 1.\n\
The embedding quality describes the overall quality for the complete dataset. \
Select the 'Embedding stress' property with the dropdown menu on the bottom left to get a embedding quality estimate for each single compound\n\
This warning is expected when using Random Embedding.\n\
If you get this warning and your are using PCA, try to use {0} instead.\n\
If you are using structural features, try to use {0} with similarity method 'Tanimoto'.\n\
If there are too many features with too diverse values, it may be impossible to get a good overall 3D embedding at all.  

# embed methods

embed.random = No 3D Embedding (Random positions)
embed.random.desc = The compound features are ignored. This compounds are arranged randomly, equally distributed in a sphere.

embed.weka.pca = PCA 3D Embedder (WEKA)
embed.weka.pca.desc = Uses {0}\n\
Principal component analysis (PCA) is a method that reduces the feature space. The \
method transforms the original features into principal components, which are uncorrelated numerical \
features. The first, most significant 3 principal components are used for 3D Embedding.
	
embed.r.pca = PCA 3D Embedder (R)
embed.r.pca.desc = Uses {0}\n\
Principal component analysis (PCA) is a method that reduces the feature space. The \
method transforms the original features into principal components, which are uncorrelated numerical \
features. The first, most significant 3 principal components are used for 3D Embedding.\n\n\
Details: http://stat.ethz.ch/R-manual/R-patched/library/stats/html/prcomp.html

embed.r.tsne = TSNE 3D Embedder (R)
embed.r.tsne.desc = Uses {0}\n\
Performs T-Distributed Stochastic Neighbor Embedding.\n\
t-SNE tends to ignore large dissimilarities in favor of preserving <b>local structures</b>. \
In general, t-SNE is not suited for small data sets.\n\n\
Details: http://cran.r-project.org/web/packages/tsne\n

embed.r.smacof = SMACOF 3D Embedder (R)
embed.r.smacof.desc = Uses {0}\n\
Performs Multidimensional Scaling Using Majorization: SMACOF in R.\n\n\
Details: http://cran.r-project.org/web/packages/smacof
embed.r.smacof.slow = The runtime of the optimization method SMACOF largely increases with the number of compounds. \
For datasets with more than 100 compounds, {0} should be preferred. \
For datasets with more than 50 compounds, you could try to reduce the number of iterations.

embed.r.sammon = Sammon 3D Embedder (R)
embed.r.sammon.desc = Uses {0}\n\
Performs non-metric multidimensional scaling.\n\n\
Details: http://stat.ethz.ch/R-manual/R-patched/library/MASS/html/sammon.html

# wizard: align compounds ###################################

align.title = Align Compounds
align.desc = Aligns the compounds inside a cluster with each other.
align.error.no-struct = Requires structural features, no structural features selected!

# align methods

align.no-align = No Cluster Aligner
align.no-align.desc = Does NOT align compounds. Hence, the compounds are oriented in 3D space as provided in the dataset

align.max-frag = Maximum Structural Fragment Aligner
align.max-frag.desc = Requires structural fragments as features. \
The compounds of each cluster are aligned according to their largest structural fragment that matches the complete cluster. \
Hence, their orientation in 3D space is adjusted such that the common substructure is superimposed.\n\n\
Depending on how the fragments have been created, the alignment uses the either the obfit command of {0}, or {1}.
align.max-frag.short = Maximum-Fragment

align.mcs = Maximum Common Subgraph (MCS) Aligner
align.mcs.desc = First, the Maximum Common Subgraph (MCS) of each cluster is computed. \
This is computationally intensive and will take quite long for large clusters (the runtime is O(n²)).\n\
Second the compounds of each cluster are aligned according to their MCS. \
Hence, their orientation in 3D space is adjusted such that the common substructure is superimposed.\n\n\
Uses {0}.
align.mcs.short = MCS
align.mcs.slow = MCS computation is a time consuming task. {0} should be preferred for medium-sized or large datasets (if structural fragments are available).

align.manual = Manual Subgraph Aligner
align.manual.desc = All Clusters are aligned according to a manual specified SMARTS.\n\
This is for expert users, that know the dataset very well.\n\
For the alignment, one of the following chemical libraries is used:\n* {0}\n* {1}.
align.manual.short = Manual Subgraph

# wizard : general

mapping.incomp.distances = Clustering and embedding use different distance measures
mapping.incomp.distances.desc = The clustering is based on \"{0}\" distance/similarity of compound feature values. \
However, the 3d embedding is based on \"{1}\" distance/similarity of compound feature values.\n\
You might want to use the equal distance measure for both approaches to achieve a more consistent clustering and embedding. \
This warning might as well be ignored.

# viewer

props.ccc = Embedding stress
props.ccc.desc = 0 := perfectly embedded (no stress), 1: high stress

# compound and feature table

cluster-table.title = Cluster table
cluster-table.info = Selected clusters will be selected in the 3D-viewer, too. Click on table headers to sort clusters. 
compound-table.title = Compound table
compound-table.info = Selected compounds will be selected in the 3D-viewer, too. Click on table headers to sort compounds. Use 'CTRL' and 'SHIFT' to select multiple compounds at once. 
feature-table.title = Feature table
feature-table.info = Selected features will be selected in the 3D-viewer, too. Click on table headers to sort features.

#actions

action.file-new = New dataset / mapping
action.file-new.tooltip = Restarts the wizard.
action.file-cluster-table = Cluster table
action.file-cluster-table.tooltip = Gives an overview over all clusters.
action.file-compound-table = Compound table
action.file-compound-table.tooltip = Gives an overview over all compounds.
action.file-feature-table = Feature table
action.file-feature-table.tooltip = Gives an overview over all available compound features.
action.file-exit = Exit
action.file-exit.tooltip = Closes the CheS-Mapper software.
action.remove-current = Remove selected cluster/compound
action.remove-current.tooltip = Removes the currently selected cluster or compound from the Viewer.\nThe original dataset is not modified.
action.remove-clusters = Remove cluster/s
action.remove-clusters.tooltip = Removes one or more clusters from the Viewer.\nThe original dataset is not modified.
action.remove-compounds = Remove compound/s
action.remove-compounds.tooltip = Removes one or more compounds from the Viewer.\nThe original dataset is not modified.
action.export-current = Export selected cluster/compound
action.export-current.tooltip = Exports the currently selected cluster or compound to a file.\nSupported file formats are sdf and csv. 
action.export-clusters = Export cluster/s
action.export-clusters.tooltip = Exports one or more clusters to a file.\nSupported file formats are sdf and csv.
action.export-compounds = Export compound/s
action.export-compounds.tooltip = Exports one or more compounds to a file.\nSupported file formats are sdf and csv.
action.export-image = Export image
action.export-image.tooltip = Saves a high-resolution screenshot to a file.\nSupported formats are jpg, png, gif, ppm, and pdf.  
action.export-workflow = Export wizard settings
action.export-workflow.tooltip = Saves the current wizard settings to a file.\nThe wizard settings can be loaded with the 'Import' button in the wizard.   
action.view-full-screen = Fullscreen mode
action.view-full-screen.tooltip = CheS-Mapper uses the entire screen. 
action.view-draw-hydrogens = Draw hydrogens (if available)
action.view-draw-hydrogens.tooltip = Attaches hydrogens to the compound structures, if available in the dataset file.
action.view-hide.settings = Hide unselected compounds
action.view-hide-none = Never hide compounds
action.view-hide-none.tooltip = All compounds/clusters are visible, independent of compound selection.
action.view-hide-non-active = Hide unselected compounds 
action.view-hide-non-active.tooltip = Non-selected compounds or clusters are made translucent, to improve visibility of the selected compound/s.
action.view-hide-non-watched = Hide unselected compounds on mouse-over  
action.view-hide-non-watched.tooltip = If there is a compound/cluster selected via mouse-over, non-selected compounds are made translucent, to improve visibility of the selected one/s.
action.view-spin = Spin
action.view-spin.tooltip = Enables permanent rotation of the Viewer.
action.view-black-white = Background color black
action.view-black-white.tooltip = Toggles between black and white background.\nWhite background could be preferred for screenshots that will be printed.   
action.view-compound-descriptor = Compound identifier
action.view-compound-descriptor.tooltip = Select a feature to be used as identifier for the compound, as shown in the compound list on the top left.\nThis could e.g. be the chemical name or a compound ID if available in the dataset.  
action.view-antialias = Graphic settings high
action.view-antialias.tooltip = Enables anti-aliasing. This requires a fast CPU for large datasets.
action.view-select-last-feature = Selected last feature
action.view-select-last-feature.tooltip = Toggles between the currently selected feature, and the last selected feature.
action.highlight-colors = Highlighting colors for numerical features
action.highlight-colors.tooltip = Enable log highlighting and/or change highlighting colors (default colors are red for high values and blue for low values).
action.highlight-colors.log = Enable log highlighting
action.highlight-colors.log.description = The numerical feature values for highlighting will be log transformed.\n\
This could be preferred if the feature value are log-distributed, e.g. most compounds are highlighted in dark blue.
action.highlight-grad = Highlighting colors
action.highlight-grad.feature = Highlighting colors for {0}
action.highlight-grad.tooltip = By default, compounds with low feature values are drawn in blue, compounds with high feature values are drawn in red. This can be adjusted manually.
action.highlight-color-match = Substructure match color
action.highlight-color-match.tooltip = Changes the color that is used to highlight substructure matches in compounds. 
action.highlight-mode = Highlight features with spheres
action.highlight-mode.tooltip = Draws a translucent sphere around each compound when highlighting feature values\n(instead of changing the compound color). 
action.highlight-last-feature = Highlight two features (previous selected feature)
action.highlight-last-feature.tooltip = Draws a second flat sphere to highlight the last selected feature.\nThis can be used to compare two feature at a time.
action.highlight-sphere.settings = Sphere settings
action.highlight-decr-sphere-size = Decrease highlight-sphere size
action.highlight-decr-sphere-size.tooltip = Reduces the size of the sphere used for highlighting. 
action.highlight-incr-sphere-size = Increase highlight-sphere size
action.highlight-incr-sphere-size.tooltip = Increases the size of the sphere used for highlighting.
action.highlight-decr-sphere-translucency = Decrease highlight-sphere translucency
action.highlight-decr-sphere-translucency.tooltip = Draws the sphere used for highlighting more solid.
action.highlight-incr-sphere-translucency = Increase highlight-sphere translucency
action.highlight-incr-sphere-translucency.tooltip = Draws the sphere used for highlighting less solid.
action.help-docu = Online documentation
action.help-docu.tooltip = Opens online documentation with the default browser.
action.help-about = About CheS-Mapper
action.help-about.tooltip = Shows about dialog.




